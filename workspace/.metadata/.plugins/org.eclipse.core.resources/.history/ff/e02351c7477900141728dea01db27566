package dotBAK.filesystem;

import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.util.HashSet;
import java.util.Set;

import org.apache.commons.compress.archivers.tar.TarArchiveOutputStream;

import dotBAK.common.Filter;

public class FileTree {
	private Set<File> _topLevelFiles;
	private Set<Filter<File>> _filters;
	private FileSystem _parentFS;
	
	public boolean compress(File out) {
		TarArchiveOutputStream tarOut;
		try {
			tarOut = new TarArchiveOutputStream(new FileOutputStream(out));
			for(File f : getFiles()) {
				f.addToArchive(tarOut);
			}
			tarOut.close();
			return true;
		} catch (FileNotFoundException e) {
			_parentFS.log("filetree not found");
			return false;
		} catch (IOException e) {
			_parentFS.log("couldn't close tar output stream");
			return false;
		}
	}
	
	public Set<File> getFiles() {
		Set<File> files = new HashSet<File>();
		for(File f : _topLevelFiles) {
			boolean include = true;
			for(Filter<File> filt : _filters) {
				if(!filt.include(f))
					include = false;
			}
			if(include)
				files.add(f);
		}
		return files;
	}
}
