package dotBAK.filesystem;

import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.util.HashSet;
import java.util.Set;

import org.apache.commons.compress.archivers.ArchiveOutputStream;
import org.apache.commons.compress.archivers.ArchiveStreamFactory;
import org.apache.commons.compress.archivers.tar.TarArchiveOutputStream;

import dotBAK.common.Filter;

public class FileTree {
	private Set<File> _topLevelFiles;
	private Set<Filter<File>> _filters;
	private FileSystem _parentFS;
	
	public boolean compress(File destination) {
		// use the archive stream factory to create a tar archive output stream
        ArchiveOutputStream out = new ArchiveStreamFactory().createArchiveOutputStream(ArchiveStreamFactory.TAR, new FileOutputStream(destination));
        
        /* Repeat steps for the next file that needs to be added to the TAR */
        tar_input_file= new File("test_file_2.xml");
        tar_file = new TarArchiveEntry(tar_input_file);
        tar_file.setSize(tar_input_file.length());
        out.putArchiveEntry(tar_file);
        IOUtils.copy(new FileInputStream(tar_input_file), out);
        /* Close Archieve entry, write trailer information */
        out.closeArchiveEntry();
        out.finish(); 
        /* Close output stream, our files are zipped */
        tar_output.close();
	}
	
	public Set<File> getFiles() {
		Set<File> files = new HashSet<File>();
		for(File f : _topLevelFiles) {
			boolean include = true;
			for(Filter<File> filt : _filters) {
				if(!filt.include(f))
					include = false;
			}
			if(include)
				files.add(f);
		}
		return files;
	}
}
